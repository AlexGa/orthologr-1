% Generated by roxygen2 (4.0.2): do not edit by hand
\name{dNdS}
\alias{dNdS}
\title{Function to calculate the synonymous vs nonsynonymous substitutionrates for two organisms.}
\usage{
dNdS(query_file, subject_file, seq_type = "protein", format = "fasta",
  ortho_detection = "RBH", blast_path = NULL, aa_aln_type = "multiple",
  aa_aln_tool = "clustalw", aa_aln_path = NULL, aa_aln_params = NULL,
  codon_aln_tool = "pal2nal", dnds_est.method = "YN", comp_cores = 1,
  quiet = FALSE)
}
\arguments{
\item{query_file}{a character string specifying the path to the CDS file of interest (query organism).}

\item{subject_file}{a character string specifying the path to the CDS file of interest (subject organism).}

\item{seq_type}{a character string specifying the sequence type stored in the input file.
Options are are: "cds", "protein", or "dna". In case of "cds", sequence are translated to protein sequences,
in case of "dna", cds prediction is performed on the corresponding sequences which subsequently are
translated to protein sequences. Default is \code{seq_type} = "cds".}

\item{format}{a character string specifying the file format of the sequence file, e.g. "fasta", "gbk". See \code{\link{read.cds}},
\code{\link{read.genome}}, \code{\link{read.proteome}} for more details.}

\item{ortho_detection}{a character string specifying the orthology inference method that shall be performed
to detect orthologous genes. Default is \code{ortho_detection} = "RBH" (BLAST reciprocal best hit).
Further methods are: "BH" (BLAST best hit), "RBH" (BLAST reciprocal best hit), "PO" (ProteinOrtho), "OrthoMCL, "IP" (InParanoid).}

\item{blast_path}{a character string specifying the path to the BLAST program (in case you don't use the default path).}

\item{aa_aln_type}{a character string specifying the amino acid alignement type: \code{aa_aln_type} = "multiple" or \code{aa_aln_type} = "pairwise".
Default is \code{aa_aln_type} = "multiple".}

\item{aa_aln_tool}{a character string specifying the program that should be used e.g. "clustalw".}

\item{aa_aln_path}{a character string specifying the path to the multiple alignment program (in case you don't use the default path).}

\item{dnds_est.method}{a character string specifying the dNdS estimation method, e.g. "Comeron","Li", "YN", etc. See Details for all options.}

\item{comp_cores}{a numeric value specifying the number of cores that shall be used to perform parallel computations on a multicore machine.}

\item{quiet}{a logical value specifying whether the output of the corresponding alignment tool shall be printed out to the console.
Default is \code{quiet} = \code{FALSE}.}
}
\value{
A data.table storing the dNdS values of the correspnding genes.
}
\description{
This function takes the CDS files of two organisms of interest (query_file and subject_file)
and computes the dNdS estimation values for orthologous gene pairs between these organisms.
}
\details{
#' The dNdS estimation methods available in this function are:

- "Li" : Li's method (1993) -> provided by the ape package

- "Comeron" : Comeron's method (1995)

dNdS estimation methods provided by KaKs_Calculator 1.2 :

Approximate Methods:

"NG": Nei, M. and Gojobori, T. (1986)

"LWL": Li, W.H., et al. (1985)

"LPB": Li, W.H. (1993) and Pamilo, P. and Bianchi, N.O. (1993)

"MLWL" (Modified LWL), MLPB (Modified LPB): Tzeng, Y.H., et al. (2004)

"YN": Yang, Z. and Nielsen, R. (2000)

"MYN" (Modified YN): Zhang, Z., et al. (2006)

Maximum-Likelihood Methods:

GY: Goldman, N. and Yang, Z. (1994)

MS (Model Selection), MA (Model Averaging): based on a set of candidate models defined by Posada, D. (2003) as follows.

MS (Model Selection) and MA (Model Averaging) over:

JC,
F81,
K2P,
HKY,
TrNEF,
TrN,
K3P,
K3PUF,
TIMEF,
TIM,
TVMEF,
TVM,
SYM,
GTR
}
\examples{
\dontrun{

# get a dNdS table using:
# 1) reciprocal best hit for orthology inference (RBH)
# 2) clustalw for pairwise amino acid alignments
# 3) pal2nal for codon alignments
# 4) Yang, Z. and Nielsen, R. (2000) (YN) for dNdS estimation
# 5) single core processing 'comp_cores = 1'
dNdS(query_file = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
ortho_detection = "RBH", aa_aln_type = "multiple",
aa_aln_tool = "clustalw", aa_aln_path = "/path/to/clustalw/",
codon_aln_tool = "pal2nal", dnds_est.method = "YN", comp_cores = 1)

# The same result can be obtained using multicore processing using: comp_cores = 2 or 3 or more ...
dNdS(query_file = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
ortho_detection = "RBH", aa_aln_type = "multiple",
aa_aln_tool = "clustalw", aa_aln_path = "/path/to/clustalw/",
codon_aln_tool = "pal2nal", dnds_est.method = "YN", comp_cores = 2)

}
}
\author{
Sarah Scharfenberg and Hajk-Georg Drost
}
\seealso{
\code{\link{substitutionrate}}, \code{\link{multi_aln}}, \code{\link{codon_aln}}, \code{\link{blast_best}},
\code{\link{blast_rec}}, \code{\link{read.cds}}
}

