% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate_cds_to_protein_all.R
\name{translate_cds_to_protein_all}
\alias{translate_cds_to_protein_all}
\title{Translate coding sequences into amino acid sequences for multiple files}
\usage{
translate_cds_to_protein_all(input_folder, output_folder,
  delete_corrupt_cds = FALSE)
}
\arguments{
\item{input_folder}{file path to folder storing the coding sequences \code{fasta} files.}

\item{output_folder}{name or file path to a folder that that shall be generated to store the output \code{fasta} files.}

\item{delete_corrupt_cds}{delete_corrupt_cds a logical value indicating whether sequences with corrupt base triplets should be removed from the input \code{file}. This is the case when the length of coding sequences cannot be divided by 3 and thus the coding sequence contains at least one corrupt base triplet.}
}
\description{
A helper function that takes \code{fasta} files storing coding sequences
as input and translates these coding sequences into amino acid sequences
storing them as \code{fasta} output files.
}
\examples{
dontrun{
# install.packages("biomartr")
# download coding sequences of Arabidopsis thaliana, Arabidopsis lyrata, and Capsella rubella
org_list <- c("Arabidopsis thaliana", "Arabidopsis lyrata", "Capsella rubella")
biomartr::getCDSSet(db = "refseq",
             organism = org_list,
             gunzip = TRUE,
             path = "cds_examples")
# translate coding sequences into amino acid sequences
translate_cds_to_protein_all(input_folder = "cds_examples", 
                             output_folder = "translated_seqs",
                             delete_corrupt_cds = FALSE)
}
}
\author{
Hajk-Georg Drost
}
