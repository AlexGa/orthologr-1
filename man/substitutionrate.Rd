% Generated by roxygen2 (4.0.1): do not edit by hand
\name{substitutionrate}
\alias{substitutionrate}
\title{Function to calculate the synonymous vs nonsynonymous substitutionrate for a codon alignment (helper function).}
\usage{
substitutionrate(file, est.method, format = "fasta")
}
\arguments{
\item{file}{a character string specifying the path to a codon alignment file}

\item{est.method}{a character string specifying the dNdS estimation method, e.g. "Cameron","Li" .
Note, that when using "Cameron" as dNdS estimation method, the program 'gestimator' is used to compute the
corresponding dNdS values from a given alignment. The program 'gestimator' can only read "fasta" files,
hence it is important to use format = "fasta" when choosing est.method = "Cameron".}

\item{format}{a character string specifying the file format in which the alignment is stored:
"mase", "clustal", "phylip", "fasta" , "msf"}
}
\value{
A data.table storing the query_id, subject_id, dN, dS, and dNdS values.
}
\description{
This function takes a pairwise alignment as input file and estimates the
dNdS ratio of the corresponding alignment. Nevertheless, this function is a helper function for
\code{\link{dNdS}}. For dNdS computations you should use the function: \code{\link{dNdS}}.
}
\details{
This function takes a pairwise alignments file as input and estimates dNdS ratios
of the corresponding alignments using predefined dNdS estimation methods.

The dNdS estimation methods available in this function are:

- "Li" : Li's method (1993)

- "Cameron" : Cameron's method (1995)
}
\examples{
\dontrun{

# estimate the dNdS rate using Li's method
substitutionrate(system.file("seqs/aa_seqs.aln", package = "orthologr"),
                 est.method = "Li", format = "clustal")

}
}
\author{
Sarah Scharfenberg and Hajk-Georg Drost
}
\references{
Li, W.-H. (1993) Unbiased estimation of the rates of synonymous and nonsynonymous substitution. J. Mol. Evol., 36:96-99.

Charif, D. and Lobry, J.R. (2007) SeqinR 1.0-2: a contributed package to the R project for statistical computing devoted to biological sequences retrieval and analysis.

Thornton, K. (2003) libsequence: a C++ class library for evolutionary genetic analysis. Bioinformatics 19(17): 2325-2327
}

