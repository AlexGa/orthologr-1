% Generated by roxygen2 (4.0.2): do not edit by hand
\name{alignmentSearch}
\alias{alignmentSearch}
\title{Function to perform a global alignment search for orthologous genes.}
\usage{
alignmentSearch(query_file, subject_file, seq_type = "prot",
  format = "fasta", tool = "ggsearch", path = NULL, comp_cores = 1,
  print_statistics = FALSE, clean_folders = FALSE)
}
\arguments{
\item{query_file}{a character string specifying the path to the sequence file of interest (query organism).}

\item{subject_file}{a character string specifying the path to the sequence file of interest (subject organism).}

\item{seq_type}{a character string specifying the sequence type stored in the input file.
Options are are: "cds", "protein". In case of "cds", sequence are translated to protein sequences,
Default is \code{seq_type} = "protein".}

\item{format}{a character string specifying the file format of the sequence file. Default is "fasta".}

\item{tool}{a character string specifying the global alignment tool that shall be used, e.g. "ggsearch","ssearch".}

\item{path}{a character string specifying the path to the tool executable (in case you don't use the default path).}

\item{comp_cores}{a numeric value specifying the number of cores to be used for.}

\item{print_statistics}{a boolean value specifying whether the statistics should be printed and appear in the hit table.}

\item{clean_folders}{a boolean value spefiying whether all internall folders storing the output of used programs
shall be removed. Default is \code{clean_folders} = \code{FALSE}.}

\item{detailed_output}{a boolean value specifying whether a detailed hit table shall be returned or only the evalue of the corresponding
ortholog pairs.}
}
\description{
This function performs a protein alignment for each sequences
from the query_file to each of sequence of the subject file and returns
a hit table containing the id of the best global alignment hit.
}
\examples{
\dontrun{

# performing a search between two protein fastas using Needleman Wunsch algorithm
alignmentSearch( query_file = system.file('seqs/ortho_thal_aa.fasta', package = 'orthologr'),
                 subject_file = system.file('seqs/ortho_lyra_aa.fasta', package = 'orthologr'))

# performing a search between two cds fastas in multicore mode
alignmentSearch( query_file = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
                 subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
                 comp_cores=2, seq_type = "cds")


# performing a search between two cds fastas using Smith Waterman algorithm
alignmentSearch( query_file = system.file('seqs/ortho_thal_cds.fasta', package = 'orthologr'),
                 subject_file = system.file('seqs/ortho_lyra_cds.fasta', package = 'orthologr'),
                 tool="ssearch",comp_cores=1, seq_type = "cds")

   }
}
\author{
Sarah Scharfenberg and Hajk-Georg Drost
}

